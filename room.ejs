<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Zoom Clone Room</title>
   <script>
      const ROOM_ID = "<%= roomId %>"
   </script>
   <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
   <link rel="stylesheet" href="style.css">
   <script defer src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
   <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
   <script src="/socket.io/socket.io.js" defer></script>
   <link rel="stylesheet" href="style.css">
   <script src="https://kit.fontawesome.com/c939d0e917.js"></script>
   <script src="script.js" defer></script>
   <style>
      #video-grid {
         display: flex;
         justify-content: center;
         flex-wrap: wrap;
      }
      video {
         height: 350px;
         width: 500px;
         object-fit: cover;
         padding: 8px;
      }
      #chat-container {
         position: fixed;
         right: 0;
         top: 0;
         width: 270px;
         height: 100vh;
         background: rgba(0, 0, 0, 0.1);
         padding: 10px;
         overflow: hidden;
         box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
      }
      #messages {
         height: 80vh;
         overflow-y: auto;
         border: 1px solid rgba(0, 0, 0, 0.1);
         margin-bottom: 10px;
         padding: 5px;
         background: rgba(15, 15, 15, 0.1);
      }
   </style>
</head>
<body>
   <div class="main">
      <div class="main__left">
         <div class="main__videos">
            <div id="video-grid"></div>
            <div id="chat-container">
               <h3>Chat</h3>
               <div id="messages"></div>
               <form id="chat-form">
                  <input id="chat-message" type="text" placeholder="Type a message..." autocomplete="off" style="width: 80%;">
                  <button type="submit">Send</button>
               </form>
               <div style="margin-top: 10px;"></div>
                </script>
                
               <div style="margin-top: 10px;">
                  <button onclick="downloadChat()">Download Chat</button>
               </div>
            </div>
      </div>
      <div class="main__right">
         </div>
         <div class="main__controls">
            <div class="main__controls__block">
               <div onclick="muteUnmute()" class="main__controls__button main__mute_button">
                  <i class="fas fa-microphone"></i>
                  <span>Mute</span>
               </div>
               <div onclick="playStop()" class="main__controls__button main__video_button">
                  <i class="fas fa-video"></i>
                  <span>Stop Video</span>
               </div>
            </div>
            <div class="main__controls__block">
               <div class="main__controls__button" id="security-btn">
                  <i class="fas fa-shield-alt"></i>
                  <span>Security</span>
               </div>
               <div id="security-panel" style="
   display: none;
   position: fixed;
   bottom: 100px;
   left: 20px;
   background: #ffffff00;
   padding: 15px;
   border: 1px solid #141414;
   border-radius: 8px;
   box-shadow: 0 4px 8px rgba(0,0,0,0.1);
   z-index: 1000;
">
   <strong>Security Options</strong><br><br>
   <label><input type="checkbox" id="lock-meeting"> Lock Meeting</label><br>
   <label><input type="checkbox" id="disable-chat"> Disable Chat</label><br>
   <label><input type="checkbox" id="disable-video"> Disable Participant Video</label><br>
   <label><input type="checkbox" id="disable-audio"> Disable Participant Audio</label>
</div>

               <div class="main__controls__button">
                  <i class="fas fa-user-friends"></i>
                  <span>Participants</span>
               </div>
                        <!-- Chat Toggle Button -->
            <div class="main__controls__button" id="chat-toggle">
               <i class="fas fa-comment-alt"></i>
               <span>Chat</span>
            </div>

            <!-- Chat Container (initially hidden) -->
            <div id="chat-container" style="display: none;">
               <h3>Chat</h3>
               <div id="messages"></div>
               <form id="chat-form">
                  <input id="chat-message" type="text" placeholder="Type a message..." autocomplete="off" style="width: 80%;">
                  <button type="submit">Send</button>
               </form>
               <div style="margin-top: 10px;">
                  <button onclick="downloadChat()">Download Chat</button>
               </div>
            </div>
            <script>
               document.getElementById("chat-toggle").addEventListener("click", () => {
                  const chat = document.getElementById("chat-container");
                  chat.style.display = (chat.style.display === "none" || chat.style.display === "") ? "block" : "none";
               });
            </script>

            </div>
            <div class="main__controls__block">
               <div class="main__controls__button">
                  <span class="leave_meeting" id="leave-btn">Leave Meeting</span>
               </div>
            </div>
         </div>
      </div>
   </div>
   <script>
      function muteUnmute() {
         const enabled = myVideoStream.getAudioTracks()[0].enabled;
         if (enabled) {
            myVideoStream.getAudioTracks()[0].enabled = false;
            document.querySelector('.main__mute_button i').classList.remove('fa-microphone');
            document.querySelector('.main__mute_button i').classList.add('fa-microphone-slash');
            document.querySelector('.main__mute_button span').textContent = 'Unmute';
         } else {
            myVideoStream.getAudioTracks()[0].enabled = true;
            document.querySelector('.main__mute_button i').classList.remove('fa-microphone-slash');
            document.querySelector('.main__mute_button i').classList.add('fa-microphone');
            document.querySelector('.main__mute_button span').textContent = 'Mute';
         }
      }

      function playStop() {
         const enabled = myVideoStream.getVideoTracks()[0].enabled;
         if (enabled) {
            myVideoStream.getVideoTracks()[0].enabled = false;
            document.querySelector('.main__video_button i').classList.remove('fa-video');
            document.querySelector('.main__video_button i').classList.add('fa-video-slash');
            document.querySelector('.main__video_button span').textContent = 'Play Video';
         } else {
            myVideoStream.getVideoTracks()[0].enabled = true;
            document.querySelector('.main__video_button i').classList.remove('fa-video-slash');
            document.querySelector('.main__video_button i').classList.add('fa-video');
            document.querySelector('.main__video_button span').textContent = 'Stop Video';
         }
      }
     
      function downloadChat() {
         const messages = Array.from(document.querySelectorAll('#messages div')).map(el => el.innerText);
         const chatText = messages.join('\n');
         const blob = new Blob([chatText], { type: 'text/plain' });
         const url = URL.createObjectURL(blob);

         const a = document.createElement('a');
         a.href = url;
         a.download = `chat-${ROOM_ID}.txt`;
         document.body.appendChild(a);
         a.click();
         document.body.removeChild(a);
         URL.revokeObjectURL(url);
      }
      
      document.getElementById("leave-btn").addEventListener("click", () => {
   // Optional: Ask for confirmation
   if (confirm("Are you sure you want to leave the meeting?")) {
      window.location.href = "/"; // or any other route like "/goodbye"
   }
});
document.getElementById("security-btn").addEventListener("click", () => {
   const panel = document.getElementById("security-panel");
   panel.style.display = panel.style.display === "none" ? "block" : "none";
});

// Toggle logic examples
document.getElementById("disable-chat").addEventListener("change", function () {
   const chatInput = document.getElementById("chat-message");
   chatInput.disabled = this.checked;
});

document.getElementById("disable-video").addEventListener("change", function () {
   // This only affects self; you'd need server-side logic to control others
   myVideoStream.getVideoTracks()[0].enabled = !this.checked;
});

document.getElementById("disable-audio").addEventListener("change", function () {
   myVideoStream.getAudioTracks()[0].enabled = !this.checked;
});

document.getElementById("lock-meeting").addEventListener("change", function () {
   socket.emit("toggle-lock", { roomId: ROOM_ID, lock: this.checked });
});

   </script>
</body>
</html>
